
def PatternCount(text, pattern):
    count = 0
    for i in range(len(text) - len(pattern) + 1):
        if text[i:i+len(pattern)] == pattern:
            count = count + 1
    return count


input = "TGGTCGTTGGTCGTCTTCCTGGTCGTCTTGGTCGTATTGGTCGTATGGTCGTATGGTCGTGCTGGTCGTTAGAGGCCTGGTCGTCGCACTGGTCGTCTGGTCGTTAGTGGTCGTGTGGTCGTGCTGGTCGTAGGATTCATACTGATTTATGGTCGTATGATTTGGTCGTACGGTGGTCGTCAGAGCGTGGTCGTATTGGTCGTTTGGTCGTTACCATGCTGGTCGTTTGTTGGTCGTTGGTCGTCTGGTCGTCACTGGTCGTGTCTGGTCGTTGGTCGTTGGTCGTCCTGGTCGTCGTGGTCGTACGCTGGTCGTGATGGTCGTGAAGTGGTCGTCGTTGGTCGTTGGTCGTCGGTGTGGTCGTTGGTCGTTCCTTGGTCGTTGGTCGTAACGCTAGAATGGTCGTTGTGGTCGTTACTTGGTCGTTGGTCGTAGTGGTCGTGCAGTGGTCGTTTGGTCGTCTCATTTTGCCTTGGTCGTTGTGGTCGTTGGTCGTTGTGGTCGTTGGTCGTTGTGGTCGTTCATGGTCGTTACATGGTCGTCAGGCTATGCGAACGTGGTCGTTATTCCTGGTCGTTGCTATGGTCGTCATACAAGTATAGTTGGTCGTCCAGTGGTCGTTGGTCGTGGTGGTCGTTGGTCGTCTGGTCGTGTGGTCGTGCTAGCGTGCTGGGAGCGATGGTCGTCTGGTCGTTTTTGGTCGTTGGTCGTTGGTCGTCTACCTGGTCGTATGGTCGTTTGCTTCGTGGTCGTATGGTCGTTTGGTCGTGTGGTCGTATGGTCGTTGGTGGTCGTGATGGTCGTCCTTCATGGTCGTTGGTCGTAGCACTGGTCGTTTCATGGTCGTCTGGTCGTGCGACTGGTCGTATGGTCGTTAATTATTTGATGGTCGTTCATGGTCGTTGGTCGTTGGTCGTTTTGGTCGTTTGTTTGGTCGTGCCGAACCGTGGTCGTAATGGTCGTATGGTCGTGTTTTGGTCGT"

#result = PatternCount(input, "TGGTCGTTG")
# print(result)


def FrequentWords(text, k):
    frequent_patterns = []
    count = []
    for i in range(len(text) - k):
        pattern = text[i:i+k]
        count.append(PatternCount(text, pattern))
    max_value = max(count)
    for i in range(len(text) - k):
        if count[i] == max_value:
            frequent_patterns.append(text[i:i+k])

    return set(frequent_patterns)


print(FrequentWords("CACCTACGGTGTTCCCGCTGGTAAGCACCTACGGGCTGGTAAGGCTGGTAAGCACCTACGGTGTGAAAATGTGAAAATGTGAAAACGAGCCTGCACCTACGGTGTGAAAATGTGAAAACGAGCCTGTGTGAAAATGTGAAAACGAGCCTGTGTGAAAACGAGCCTGCACCTACGGGCTGGTAAGCACCTACGGCACCTACGGTGTGAAAAGCTGGTAAGGCTGGTAAGGCTGGTAAGCACCTACGGTGTTCCCTGTTCCCCACCTACGGCACCTACGGTGTTCCCCGAGCCTGTGTGAAAATGTGAAAACGAGCCTGGCTGGTAAGCGAGCCTGCACCTACGGTGTGAAAACACCTACGGTGTTCCCCACCTACGGGCTGGTAAGGCTGGTAAGCACCTACGGGCTGGTAAGTGTGAAAACGAGCCTGGCTGGTAAGCGAGCCTGCGAGCCTGCGAGCCTGTGTGAAAACGAGCCTGCACCTACGGCGAGCCTGTGTGAAAACGAGCCTGCGAGCCTGCACCTACGGGCTGGTAAGTGTTCCCCGAGCCTGTGTGAAAACGAGCCTGCGAGCCTGCACCTACGGGCTGGTAAGCACCTACGGTGTTCCCCGAGCCTGTGTGAAAATGTGAAAACGAGCCTGGCTGGTAAGTGTGAAAAGCTGGTAAGCACCTACGGTGTTCCCCACCTACGGGCTGGTAAGTGTGAAAAGCTGGTAAGTGTTCCCCGAGCCTGTGTTCCCTGTTCCCTGTGAAAATGTTCCCGCTGGTAAGCGAGCCTGTGTTCCCCGAGCCTGGCTGGTAAGTGTTCCCCGAGCCTGCACCTACGGTGTTCCCCACCTACGGCACCTACGGCACCTACGG", 13))
